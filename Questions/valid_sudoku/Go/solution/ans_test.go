package solution_test

import (
	"sudoku/solution"
	"testing"
)

func TestSolution(t *testing.T) {
	inputs := []struct {
		board [][]byte
		res   bool
	}{
		{
			[][]byte{
				{'1', '2', '.', '.', '3', '.', '.', '.', '.'},
				{'4', '.', '.', '5', '.', '.', '.', '.', '.'},
				{'.', '9', '8', '.', '.', '.', '.', '.', '3'},
				{'5', '.', '.', '.', '6', '.', '.', '.', '4'},
				{'.', '.', '.', '8', '.', '3', '.', '.', '5'},
				{'7', '.', '.', '.', '2', '.', '.', '.', '6'},
				{'.', '.', '.', '.', '.', '.', '2', '.', '.'},
				{'.', '.', '.', '4', '1', '9', '.', '.', '8'},
				{'.', '.', '.', '.', '8', '.', '.', '7', '9'},
			},
			true,
		}, {
			[][]byte{
				{'1', '2', '.', '.', '3', '.', '.', '.', '.'},
				{'4', '.', '.', '5', '.', '.', '.', '.', '.'},
				{'.', '9', '1', '.', '.', '.', '.', '.', '3'},
				{'5', '.', '.', '.', '6', '.', '.', '.', '4'},
				{'.', '.', '.', '8', '.', '3', '.', '.', '5'},
				{'7', '.', '.', '.', '2', '.', '.', '.', '6'},
				{'.', '.', '.', '.', '.', '.', '2', '.', '.'},
				{'.', '.', '.', '4', '1', '9', '.', '.', '8'},
				{'.', '.', '.', '.', '8', '.', '.', '7', '9'},
			},
			false,
		},
	}

	for _, input := range inputs {
		ans := solution.IsValidSudoku(input.board)
		if ans != input.res {
			t.Fatalf(`
				Mismatching result. Expect %t, got %t
				`, input.res, ans)
		}
	}
}
